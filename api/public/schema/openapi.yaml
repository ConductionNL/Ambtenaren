openapi: 3.0.2
info:
  title: 'Medewerker Catalogus Component'
  version: V.0.1
  description: |
    API Details
    - Component: Medewerker Catalogus Component
    - Reference: mrc
    - Enviroment: dev
    - Version: V.0.1
    - Repository: [online](https://github.com/ConductionNL/medewerkercatalogus) / [zip](https://github.com/ConductionNL/medewerkercatalogus/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/mrc-php) 
    - Datamodel: [postman](/schema/mrc.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [mwb](/schema/datamodel.mwb) 
    
    'Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.'         
    
paths:
  /employees:
    get:
      tags:
        - Employee
      operationId: getEmployeeCollection
      summary: 'Retrieves the collection of Employee resources.'
      responses:
        200:
          description: 'Employee collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Employee
      operationId: postEmployeeCollection
      summary: 'Creates a Employee resource.'
      responses:
        201:
          description: 'Employee resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
          links:
            GetEmployeeItem:
              parameters:
                id: '$response.body#/id'
              operationId: getEmployeeItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /employees/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee-write'
        description: 'The new Employee resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/employees/{id}':
    get:
      tags:
        - Employee
      operationId: getEmployeeItem
      summary: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Employee resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Employee
      operationId: deleteEmployeeItem
      summary: 'Removes the Employee resource.'
      responses:
        204:
          description: 'Employee resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Employee
      operationId: putEmployeeItem
      summary: 'Replaces the Employee resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Employee resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee-write'
        description: 'The updated Employee resource'
    patch:
      tags:
        - Employee
      operationId: patchEmployeeItem
      summary: 'Updates the Employee resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Employee resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
        description: 'The updated Employee resource'
components:
  schemas:
    Employee-read:
      type: object
      description: 'All properties that the entity Employee holds.'
      properties:
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        person:
          description: 'The person that is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        sourceOrganisation:
          description: 'The organisation where this person is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
      required:
        - person
        - sourceOrganisation
    Employee-write:
      type: object
      description: 'All properties that the entity Employee holds.'
      required:
        - person
        - sourceOrganisation
      properties:
        person:
          description: 'The person that is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        sourceOrganisation:
          description: 'The organisation where this person is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
    'Employee:jsonld-read':
      type: object
      description: 'All properties that the entity Employee holds.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        person:
          description: 'The person that is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        sourceOrganisation:
          description: 'The organisation where this person is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
      required:
        - person
        - sourceOrganisation
    'Employee:jsonld-write':
      type: object
      description: 'All properties that the entity Employee holds.'
      required:
        - person
        - sourceOrganisation
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        person:
          description: 'The person that is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        sourceOrganisation:
          description: 'The organisation where this person is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
definitions:
  Employee-read:
    properties:
      id:
        description: ''
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      person:
        description: 'The person that is employed'
        type: string
        example: 'https://cc.zaakonline.nl/people/e2984465-190a-4562-829e-a8cca81aa35d'
        maxLength: 255
        format: url
      sourceOrganisation:
        description: 'The organisation where this person is employed'
        type: string
        example: 'https://cc.zaakonline.nl/organizations/e2984465-190a-4562-829e-a8cca81aa35d'
        maxLength: 255
        format: url
    required:
      - person
      - sourceOrganisation
  Employee-write:
    properties:
      person:
        description: 'The person that is employed'
        type: string
        example: 'https://cc.zaakonline.nl/people/e2984465-190a-4562-829e-a8cca81aa35d'
        maxLength: 255
        format: url
      sourceOrganisation:
        description: 'The organisation where this person is employed'
        type: string
        example: 'https://cc.zaakonline.nl/organizations/e2984465-190a-4562-829e-a8cca81aa35d'
        maxLength: 255
        format: url
    required:
      - person
      - sourceOrganisation
tags:
  -
    name: Employee
    description: |
      All properties that the entity Employee holds.
      
      
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the Employee resource'
      write: 'write right to the Employee resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the Employee resource'
      write: 'write right to the Employee resource'
host: irc.zaakonline.nl
servers:
  -
    description: 'Demo Omgeving'
    url: 'http://proto.demo.common-ground.dev'
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente ''s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
