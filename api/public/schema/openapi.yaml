openapi: 3.0.3
info:
  title: ''
  description: |-
    API Details
    - Component: 
    - Reference: medewerkercatalogus
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/medewerkercatalogus) / [zip](https://github.com/ConductionNL/medewerkercatalogus/archive/master.zip)
    - Docker Image: [online]() 
    - Datamodel: [postman](/schema/medewerkercatalogus.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [modelio (zip)](/schema/Datamodel_Modelio.zip) 

    Het Medewerker Registratie Component bevat medewerkers en de daarbij behorende HRM systematiek, hierbij kan bijvoorbeeld worden gedacht aan contractmanagement en functie of competentie overzichten. Deze functionaliteit wordt eigenlijk onttrokken aan de e-HRM norm (ofwel de HR-XML standaard, in Nederland losjes ge√Ømplementeerd als SETU). Waarbij het stuk portfolio opbouw is losgetrokken en in het Portfolio Component zit (om de e-portfolio norm te ondersteunen). Naast het simpelweg bijhouden van medewerkers is dit component echter ook bedoeld als HR tool met betrekking tot groei ambities in de trant van competenties en vaardigheden. Gecombineerd met het Portfolio Component kan het daarmee ook de basis vormen voor coachings- en of onderwijssystemen, waarbij bepaalde leer of groei doelen worden bijgehouden.
  version: V1.0
servers:
  -
    url: /
    description: ''
paths:
  /applications:
    get:
      operationId: getApplicationCollection
      tags:
        - Application
      responses:
        200:
          description: 'Application collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
      summary: 'Retrieves the collection of Application resources.'
      description: 'Retrieves the collection of Application resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[status]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[motivation]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: employee.id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'employee.id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: jobPosting.id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'jobPosting.id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postApplicationCollection
      tags:
        - Application
      responses:
        201:
          description: 'Application resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
          links:
            GetApplicationItem:
              operationId: getApplicationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /applications/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Application resource.'
      description: 'Creates a Application resource.'
      parameters: []
      requestBody:
        description: 'The new Application resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Application.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Application-write'
        required: true
      deprecated: false
    parameters: []
  '/applications/{id}':
    get:
      operationId: getApplicationItem
      tags:
        - Application
      responses:
        200:
          description: 'Application resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Application resource.'
      description: 'Retrieves a Application resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putApplicationItem
      tags:
        - Application
      responses:
        200:
          description: 'Application resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
          links:
            GetApplicationItem:
              operationId: getApplicationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /applications/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Application resource.'
      description: 'Replaces the Application resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Application resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Application.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Application-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteApplicationItem
      tags:
        - Application
      responses:
        204:
          description: 'Application resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Application resource.'
      description: 'Removes the Application resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchApplicationItem
      tags:
        - Application
      responses:
        200:
          description: 'Application resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
          links:
            GetApplicationItem:
              operationId: getApplicationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /applications/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Application resource.'
      description: 'Updates the Application resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Application resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Application-write'
        required: true
      deprecated: false
    parameters: []
  /audit_trails:
    get:
      operationId: getAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      summary: 'Retrieves the collection of AuditTrail resources.'
      description: 'Retrieves the collection of AuditTrail resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[application]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[request]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[user]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[subject]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resource]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resourceType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[endpoint]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[contentType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[content]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[session]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: request
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'request[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: user
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'user[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: subject
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'subject[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resource
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'resource[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resourceType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: endpoint
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endpoint[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: contentType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'contentType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: content
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'content[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: session
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'session[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a AuditTrail resource.'
      description: 'Creates a AuditTrail resource.'
      parameters: []
      requestBody:
        description: 'The new AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    parameters: []
  '/audit_trails/{id}':
    get:
      operationId: getAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a AuditTrail resource.'
      description: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the AuditTrail resource.'
      description: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteAuditTrailItem
      tags:
        - AuditTrail
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the AuditTrail resource.'
      description: 'Removes the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the AuditTrail resource.'
      description: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    parameters: []
  /change_logs:
    get:
      operationId: getChangeLogCollection
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      summary: 'Retrieves the collection of ChangeLog resources.'
      description: 'Retrieves the collection of ChangeLog resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[action]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectId]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectClass]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[version]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[username]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: action
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'action[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectClass
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectClass[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: version
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'version[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postChangeLogCollection
      tags:
        - ChangeLog
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ChangeLog resource.'
      description: 'Creates a ChangeLog resource.'
      parameters: []
      requestBody:
        description: 'The new ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    parameters: []
  '/change_logs/{id}':
    get:
      operationId: getChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ChangeLog resource.'
      description: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ChangeLog resource.'
      description: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteChangeLogItem
      tags:
        - ChangeLog
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ChangeLog resource.'
      description: 'Removes the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ChangeLog resource.'
      description: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    parameters: []
  /competences:
    get:
      operationId: getCompetenceCollection
      tags:
        - Competence
      responses:
        200:
          description: 'Competence collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Competence.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Competence.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
      summary: 'Retrieves the collection of Competence resources.'
      description: 'Retrieves the collection of Competence resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[grade]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: description
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'description[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: grade
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'grade[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postCompetenceCollection
      tags:
        - Competence
      responses:
        201:
          description: 'Competence resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Competence.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Competence.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Competence-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Competence-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Competence-read'
          links:
            GetCompetenceItem:
              operationId: getCompetenceItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /competences/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Competence resource.'
      description: 'Creates a Competence resource.'
      parameters: []
      requestBody:
        description: 'The new Competence resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Competence.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Competence.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Competence-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Competence-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Competence-write'
        required: true
      deprecated: false
    parameters: []
  '/competences/{id}':
    get:
      operationId: getCompetenceItem
      tags:
        - Competence
      responses:
        200:
          description: 'Competence resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Competence.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Competence.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Competence-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Competence-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Competence-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Competence resource.'
      description: 'Retrieves a Competence resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putCompetenceItem
      tags:
        - Competence
      responses:
        200:
          description: 'Competence resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Competence.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Competence.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Competence-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Competence-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Competence-read'
          links:
            GetCompetenceItem:
              operationId: getCompetenceItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /competences/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Competence resource.'
      description: 'Replaces the Competence resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Competence resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Competence.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Competence.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Competence-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Competence-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Competence-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteCompetenceItem
      tags:
        - Competence
      responses:
        204:
          description: 'Competence resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Competence resource.'
      description: 'Removes the Competence resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchCompetenceItem
      tags:
        - Competence
      responses:
        200:
          description: 'Competence resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Competence.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Competence.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Competence-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Competence-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Competence-read'
          links:
            GetCompetenceItem:
              operationId: getCompetenceItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /competences/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Competence resource.'
      description: 'Updates the Competence resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Competence resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Competence.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Competence-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Competence-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Competence-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Competence-write'
        required: true
      deprecated: false
    parameters: []
  /contracts:
    get:
      operationId: getContractCollection
      tags:
        - Contract
      responses:
        200:
          description: 'Contract collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Contract.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Contract.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
      summary: 'Retrieves the collection of Contract resources.'
      description: 'Retrieves the collection of Contract resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[employer]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[organization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[standardHours]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[agreement]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[jobFunction]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[duration]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[salary]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: description
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'description[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: employer
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'employer[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: organization
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'organization[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: standardHours
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'standardHours[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: agreement
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'agreement[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: jobFunction
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'jobFunction[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: duration
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'duration[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: salary
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'salary[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postContractCollection
      tags:
        - Contract
      responses:
        201:
          description: 'Contract resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Contract.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Contract.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Contract-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Contract-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Contract-read'
          links:
            GetContractItem:
              operationId: getContractItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /contracts/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Contract resource.'
      description: 'Creates a Contract resource.'
      parameters: []
      requestBody:
        description: 'The new Contract resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Contract.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Contract.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Contract-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Contract-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Contract-write'
        required: true
      deprecated: false
    parameters: []
  '/contracts/{id}':
    get:
      operationId: getContractItem
      tags:
        - Contract
      responses:
        200:
          description: 'Contract resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Contract.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Contract.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Contract-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Contract-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Contract-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Contract resource.'
      description: 'Retrieves a Contract resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putContractItem
      tags:
        - Contract
      responses:
        200:
          description: 'Contract resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Contract.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Contract.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Contract-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Contract-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Contract-read'
          links:
            GetContractItem:
              operationId: getContractItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /contracts/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Contract resource.'
      description: 'Replaces the Contract resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Contract resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Contract.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Contract.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Contract-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Contract-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Contract-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteContractItem
      tags:
        - Contract
      responses:
        204:
          description: 'Contract resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Contract resource.'
      description: 'Removes the Contract resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchContractItem
      tags:
        - Contract
      responses:
        200:
          description: 'Contract resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Contract.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Contract.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Contract-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Contract-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Contract-read'
          links:
            GetContractItem:
              operationId: getContractItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /contracts/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Contract resource.'
      description: 'Updates the Contract resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Contract resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Contract.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Contract-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Contract-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Contract-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Contract-write'
        required: true
      deprecated: false
    parameters: []
  /education:
    get:
      operationId: getEducationCollection
      tags:
        - Education
      responses:
        200:
          description: 'Education collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Education.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Education.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
      summary: 'Retrieves the collection of Education resources.'
      description: 'Retrieves the collection of Education resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[startDate]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[endDate]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[institution]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[degreeGrantedStatus]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[iscedEducationLevelCode]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'startDate[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'startDate[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'startDate[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'startDate[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endDate[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endDate[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endDate[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endDate[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: description
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'description[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: startDate
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'startDate[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: endDate
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endDate[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: institution
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'institution[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: degreeGrantedStatus
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'degreeGrantedStatus[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: iscedEducationLevelCode
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'iscedEducationLevelCode[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postEducationCollection
      tags:
        - Education
      responses:
        201:
          description: 'Education resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Education-read'
          links:
            GetEducationItem:
              operationId: getEducationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /education/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Education resource.'
      description: 'Creates a Education resource.'
      parameters: []
      requestBody:
        description: 'The new Education resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Education.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Education.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Education-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Education-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Education-write'
        required: true
      deprecated: false
    parameters: []
  '/education/{id}':
    get:
      operationId: getEducationItem
      tags:
        - Education
      responses:
        200:
          description: 'Education resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Education-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Education resource.'
      description: 'Retrieves a Education resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putEducationItem
      tags:
        - Education
      responses:
        200:
          description: 'Education resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Education-read'
          links:
            GetEducationItem:
              operationId: getEducationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /education/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Education resource.'
      description: 'Replaces the Education resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Education resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Education.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Education.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Education-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Education-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Education-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteEducationItem
      tags:
        - Education
      responses:
        204:
          description: 'Education resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Education resource.'
      description: 'Removes the Education resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/emails/{id}/audit_trail':
    get:
      operationId: get_audit_trailEducationItem
      tags:
        - Education
      responses:
        200:
          description: 'Education resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Education-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Education resource.'
      description: 'Retrieves a Education resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/emails/{id}/change_log':
    get:
      operationId: get_change_logsEducationItem
      tags:
        - Education
      responses:
        200:
          description: 'Education resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Education-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Education resource.'
      description: 'Retrieves a Education resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /employees:
    get:
      operationId: getEmployeeCollection
      tags:
        - Employee
      responses:
        200:
          description: 'Employee collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
      summary: 'Retrieves the collection of Employee resources.'
      description: 'Retrieves the collection of Employee resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: hasPoliceCertificate
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[person]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[organization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[hasPoliceCertificate]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: person
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'person[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: organization
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'organization[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postEmployeeCollection
      tags:
        - Employee
      responses:
        201:
          description: 'Employee resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
          links:
            GetEmployeeItem:
              operationId: getEmployeeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /employees/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Employee resource.'
      description: 'Creates a Employee resource.'
      parameters: []
      requestBody:
        description: 'The new Employee resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Employee.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee-write'
        required: true
      deprecated: false
    parameters: []
  '/employees/{id}':
    get:
      operationId: getEmployeeItem
      tags:
        - Employee
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putEmployeeItem
      tags:
        - Employee
      responses:
        200:
          description: 'Employee resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
          links:
            GetEmployeeItem:
              operationId: getEmployeeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /employees/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Employee resource.'
      description: 'Replaces the Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Employee resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Employee.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteEmployeeItem
      tags:
        - Employee
      responses:
        204:
          description: 'Employee resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Employee resource.'
      description: 'Removes the Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/audit_trail':
    get:
      operationId: get_audit_trailEmployeeItem
      tags:
        - Employee
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/change_log':
    get:
      operationId: get_change_logsEmployeeItem
      tags:
        - Employee
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /goals:
    get:
      operationId: getGoalCollection
      tags:
        - Goal
      responses:
        200:
          description: 'Goal collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Goal.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Goal.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
      summary: 'Retrieves the collection of Goal resources.'
      description: 'Retrieves the collection of Goal resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[priority]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[status]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: description
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'description[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: priority
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'priority[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: status
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'status[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postGoalCollection
      tags:
        - Goal
      responses:
        201:
          description: 'Goal resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Goal.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Goal.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Goal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Goal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Goal-read'
          links:
            GetGoalItem:
              operationId: getGoalItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /goals/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Goal resource.'
      description: 'Creates a Goal resource.'
      parameters: []
      requestBody:
        description: 'The new Goal resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Goal.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Goal.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Goal-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Goal-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Goal-write'
        required: true
      deprecated: false
    parameters: []
  '/goals/{id}':
    get:
      operationId: getGoalItem
      tags:
        - Goal
      responses:
        200:
          description: 'Goal resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Goal.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Goal.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Goal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Goal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Goal-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Goal resource.'
      description: 'Retrieves a Goal resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putGoalItem
      tags:
        - Goal
      responses:
        200:
          description: 'Goal resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Goal.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Goal.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Goal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Goal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Goal-read'
          links:
            GetGoalItem:
              operationId: getGoalItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /goals/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Goal resource.'
      description: 'Replaces the Goal resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Goal resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Goal.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Goal.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Goal-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Goal-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Goal-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteGoalItem
      tags:
        - Goal
      responses:
        204:
          description: 'Goal resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Goal resource.'
      description: 'Removes the Goal resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchGoalItem
      tags:
        - Goal
      responses:
        200:
          description: 'Goal resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Goal.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Goal.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Goal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Goal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Goal-read'
          links:
            GetGoalItem:
              operationId: getGoalItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /goals/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Goal resource.'
      description: 'Updates the Goal resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Goal resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Goal.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Goal-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Goal-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Goal-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Goal-write'
        required: true
      deprecated: false
    parameters: []
  /interests:
    get:
      operationId: getInterestCollection
      tags:
        - Interest
      responses:
        200:
          description: 'Interest collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Interest.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Interest.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
      summary: 'Retrieves the collection of Interest resources.'
      description: 'Retrieves the collection of Interest resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: description
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'description[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postInterestCollection
      tags:
        - Interest
      responses:
        201:
          description: 'Interest resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Interest.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Interest.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Interest-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Interest-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Interest-read'
          links:
            GetInterestItem:
              operationId: getInterestItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /interests/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Interest resource.'
      description: 'Creates a Interest resource.'
      parameters: []
      requestBody:
        description: 'The new Interest resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Interest.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Interest.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Interest-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Interest-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Interest-write'
        required: true
      deprecated: false
    parameters: []
  '/interests/{id}':
    get:
      operationId: getInterestItem
      tags:
        - Interest
      responses:
        200:
          description: 'Interest resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Interest.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Interest.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Interest-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Interest-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Interest-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Interest resource.'
      description: 'Retrieves a Interest resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putInterestItem
      tags:
        - Interest
      responses:
        200:
          description: 'Interest resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Interest.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Interest.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Interest-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Interest-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Interest-read'
          links:
            GetInterestItem:
              operationId: getInterestItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /interests/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Interest resource.'
      description: 'Replaces the Interest resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Interest resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Interest.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Interest.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Interest-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Interest-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Interest-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteInterestItem
      tags:
        - Interest
      responses:
        204:
          description: 'Interest resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Interest resource.'
      description: 'Removes the Interest resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchInterestItem
      tags:
        - Interest
      responses:
        200:
          description: 'Interest resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Interest.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Interest.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Interest-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Interest-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Interest-read'
          links:
            GetInterestItem:
              operationId: getInterestItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /interests/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Interest resource.'
      description: 'Updates the Interest resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Interest resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Interest.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Interest-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Interest-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Interest-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Interest-write'
        required: true
      deprecated: false
    parameters: []
  /job_functions:
    get:
      operationId: getJobFunctionCollection
      tags:
        - JobFunction
      responses:
        200:
          description: 'JobFunction collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/JobFunction.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/JobFunction.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction-read'
      summary: 'Retrieves the collection of JobFunction resources.'
      description: 'Retrieves the collection of JobFunction resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[esco]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: description
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'description[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: esco
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'esco[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postJobFunctionCollection
      tags:
        - JobFunction
      responses:
        201:
          description: 'JobFunction resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobFunction.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobFunction.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/json:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            text/html:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
          links:
            GetJobFunctionItem:
              operationId: getJobFunctionItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /job_functions/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a JobFunction resource.'
      description: 'Creates a JobFunction resource.'
      parameters: []
      requestBody:
        description: 'The new JobFunction resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/JobFunction.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/JobFunction.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/json:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          text/html:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
        required: true
      deprecated: false
    parameters: []
  '/job_functions/{id}':
    get:
      operationId: getJobFunctionItem
      tags:
        - JobFunction
      responses:
        200:
          description: 'JobFunction resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobFunction.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobFunction.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/json:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            text/html:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a JobFunction resource.'
      description: 'Retrieves a JobFunction resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putJobFunctionItem
      tags:
        - JobFunction
      responses:
        200:
          description: 'JobFunction resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobFunction.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobFunction.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/json:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            text/html:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
          links:
            GetJobFunctionItem:
              operationId: getJobFunctionItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /job_functions/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the JobFunction resource.'
      description: 'Replaces the JobFunction resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated JobFunction resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/JobFunction.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/JobFunction.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/json:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          text/html:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteJobFunctionItem
      tags:
        - JobFunction
      responses:
        204:
          description: 'JobFunction resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the JobFunction resource.'
      description: 'Removes the JobFunction resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchJobFunctionItem
      tags:
        - JobFunction
      responses:
        200:
          description: 'JobFunction resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobFunction.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobFunction.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/json:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
            text/html:
              schema:
                $ref: '#/components/schemas/JobFunction-read'
          links:
            GetJobFunctionItem:
              operationId: getJobFunctionItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /job_functions/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the JobFunction resource.'
      description: 'Updates the JobFunction resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated JobFunction resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/JobFunction.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
          text/html:
            schema:
              $ref: '#/components/schemas/JobFunction-write'
        required: true
      deprecated: false
    parameters: []
  /job_postings:
    get:
      operationId: getJobPostingCollection
      tags:
        - JobPosting
      responses:
        200:
          description: 'JobPosting collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/JobPosting.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/JobPosting.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
      summary: 'Retrieves the collection of JobPosting resources.'
      description: 'Retrieves the collection of JobPosting resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[title]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[employmentType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[educationRequirements]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[summary]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[baseSalary]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[salaryCurrency]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[jobLocationType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[hiringOrganization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[jobStartDate]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[validThrough]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[standardHours]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'jobStartDate[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'jobStartDate[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'jobStartDate[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'jobStartDate[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'validThrough[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'validThrough[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'validThrough[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'validThrough[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: hiringOrganization
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'hiringOrganization[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: employmentType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postJobPostingCollection
      tags:
        - JobPosting
      responses:
        201:
          description: 'JobPosting resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobPosting.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobPosting.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/html:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
          links:
            GetJobPostingItem:
              operationId: getJobPostingItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /job_postings/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a JobPosting resource.'
      description: 'Creates a JobPosting resource.'
      parameters: []
      requestBody:
        description: 'The new JobPosting resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/JobPosting.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/JobPosting.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/json:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          text/html:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
        required: true
      deprecated: false
    parameters: []
  '/job_postings/{id}':
    get:
      operationId: getJobPostingItem
      tags:
        - JobPosting
      responses:
        200:
          description: 'JobPosting resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobPosting.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobPosting.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/html:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a JobPosting resource.'
      description: 'Retrieves a JobPosting resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putJobPostingItem
      tags:
        - JobPosting
      responses:
        200:
          description: 'JobPosting resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobPosting.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobPosting.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/html:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
          links:
            GetJobPostingItem:
              operationId: getJobPostingItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /job_postings/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the JobPosting resource.'
      description: 'Replaces the JobPosting resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated JobPosting resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/JobPosting.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/JobPosting.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/json:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          text/html:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteJobPostingItem
      tags:
        - JobPosting
      responses:
        204:
          description: 'JobPosting resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the JobPosting resource.'
      description: 'Removes the JobPosting resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/job_postings/{id}/audit_trail':
    get:
      operationId: get_audit_trailJobPostingItem
      tags:
        - JobPosting
      responses:
        200:
          description: 'JobPosting resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobPosting.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobPosting.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/html:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a JobPosting resource.'
      description: 'Retrieves a JobPosting resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/job_postings/{id}/change_log':
    get:
      operationId: get_change_logsJobPostingItem
      tags:
        - JobPosting
      responses:
        200:
          description: 'JobPosting resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobPosting.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobPosting.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/html:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a JobPosting resource.'
      description: 'Retrieves a JobPosting resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /skills:
    get:
      operationId: getSkillCollection
      tags:
        - Skill
      responses:
        200:
          description: 'Skill collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Skill.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Skill.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
      summary: 'Retrieves the collection of Skill resources.'
      description: 'Retrieves the collection of Skill resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[level]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[esco]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: description
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'description[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: level
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'level[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: esco
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'esco[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postSkillCollection
      tags:
        - Skill
      responses:
        201:
          description: 'Skill resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Skill.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Skill.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Skill-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Skill-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Skill-read'
          links:
            GetSkillItem:
              operationId: getSkillItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /skills/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Skill resource.'
      description: 'Creates a Skill resource.'
      parameters: []
      requestBody:
        description: 'The new Skill resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Skill.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Skill.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Skill-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Skill-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Skill-write'
        required: true
      deprecated: false
    parameters: []
  '/skills/{id}':
    get:
      operationId: getSkillItem
      tags:
        - Skill
      responses:
        200:
          description: 'Skill resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Skill.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Skill.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Skill-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Skill-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Skill-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Skill resource.'
      description: 'Retrieves a Skill resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putSkillItem
      tags:
        - Skill
      responses:
        200:
          description: 'Skill resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Skill.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Skill.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Skill-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Skill-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Skill-read'
          links:
            GetSkillItem:
              operationId: getSkillItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /skills/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Skill resource.'
      description: 'Replaces the Skill resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Skill resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Skill.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Skill.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Skill-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Skill-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Skill-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteSkillItem
      tags:
        - Skill
      responses:
        204:
          description: 'Skill resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Skill resource.'
      description: 'Removes the Skill resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchSkillItem
      tags:
        - Skill
      responses:
        200:
          description: 'Skill resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Skill.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Skill.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Skill-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Skill-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Skill-read'
          links:
            GetSkillItem:
              operationId: getSkillItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /skills/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Skill resource.'
      description: 'Updates the Skill resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Skill resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Skill.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Skill-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Skill-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Skill-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Skill-write'
        required: true
      deprecated: false
    parameters: []
components:
  schemas:
    Application-read:
      type: object
      description: ''
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        status:
          maxLength: 255
          description: 'Status of the application'
          type: string
        motivation:
          maxLength: 2550
          description: 'Motivation for the application'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        jobPosting:
          description: 'the JobPosting associated to this application'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/JobPosting-read'
        employee:
          $ref: '#/components/schemas/Employee-read'
      required:
        - status
        - motivation
    Application-write:
      type: object
      description: ''
      required:
        - status
        - motivation
      properties:
        status:
          maxLength: 255
          description: 'Status of the application'
          type: string
        motivation:
          maxLength: 2550
          description: 'Motivation for the application'
          type: string
        jobPosting:
          description: 'the JobPosting associated to this application'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/JobPosting-write'
        employee:
          $ref: '#/components/schemas/Employee-write'
    Application.jsonld-read:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        status:
          maxLength: 255
          description: 'Status of the application'
          type: string
        motivation:
          maxLength: 2550
          description: 'Motivation for the application'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        jobPosting:
          description: 'the JobPosting associated to this application'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/JobPosting.jsonld-read'
        employee:
          $ref: '#/components/schemas/Employee.jsonld-read'
      required:
        - status
        - motivation
    Application.jsonld-write:
      type: object
      description: ''
      required:
        - status
        - motivation
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        status:
          maxLength: 255
          description: 'Status of the application'
          type: string
        motivation:
          maxLength: 2550
          description: 'Motivation for the application'
          type: string
        jobPosting:
          description: 'the JobPosting associated to this application'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/JobPosting.jsonld-write'
        employee:
          $ref: '#/components/schemas/Employee.jsonld-write'
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    AuditTrail.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    ChangeLog.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Competence-read:
      type: object
      description: ''
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'name of the competence'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the competence'
          type: string
        grade:
          maxLength: 255
          description: 'Grade of the competence'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        employee:
          description: 'The Employee to which this Competence belongs to'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Employee-read'
      required:
        - name
        - description
        - grade
    Competence-write:
      type: object
      description: ''
      required:
        - name
        - description
        - grade
      properties:
        name:
          maxLength: 255
          description: 'name of the competence'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the competence'
          type: string
        grade:
          maxLength: 255
          description: 'Grade of the competence'
          type: string
        employee:
          description: 'The Employee to which this Competence belongs to'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Employee-write'
    Competence.jsonld-read:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'name of the competence'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the competence'
          type: string
        grade:
          maxLength: 255
          description: 'Grade of the competence'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        employee:
          description: 'The Employee to which this Competence belongs to'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Employee.jsonld-read'
      required:
        - name
        - description
        - grade
    Competence.jsonld-write:
      type: object
      description: ''
      required:
        - name
        - description
        - grade
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'name of the competence'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the competence'
          type: string
        grade:
          maxLength: 255
          description: 'Grade of the competence'
          type: string
        employee:
          description: 'The Employee to which this Competence belongs to'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Employee.jsonld-write'
    Contract-read:
      type: object
      description: ''
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'Name of the contract'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the contract'
          type: string
        employer:
          maxLength: 255
          description: 'name of the employer'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        organization:
          maxLength: 255
          description: 'The organisation where this contract belongs to'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        standardHours:
          description: 'The standard amount of hours per week for this contract'
          type: integer
        agreement:
          maxLength: 2550
          description: 'agreement of the contract'
          type: string
        jobFunction:
          maxLength: 255
          description: 'function of the contract'
          type: string
        duration:
          description: 'how many months the contract is set to.'
          type: integer
        salary:
          description: 'Salary of the function.'
          type: integer
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        employee:
          description: 'The Employee to which this contract belongs to'
          $ref: '#/components/schemas/Employee-read'
      required:
        - name
        - description
        - employer
        - organization
        - standardHours
        - agreement
        - jobFunction
        - duration
        - salary
    Contract-write:
      type: object
      description: ''
      required:
        - name
        - description
        - employer
        - organization
        - standardHours
        - agreement
        - jobFunction
        - duration
        - salary
      properties:
        name:
          maxLength: 255
          description: 'Name of the contract'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the contract'
          type: string
        employer:
          maxLength: 255
          description: 'name of the employer'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        organization:
          maxLength: 255
          description: 'The organisation where this contract belongs to'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        standardHours:
          description: 'The standard amount of hours per week for this contract'
          type: integer
        agreement:
          maxLength: 2550
          description: 'agreement of the contract'
          type: string
        jobFunction:
          maxLength: 255
          description: 'function of the contract'
          type: string
        duration:
          description: 'how many months the contract is set to.'
          type: integer
        salary:
          description: 'Salary of the function.'
          type: integer
        employee:
          description: 'The Employee to which this contract belongs to'
          $ref: '#/components/schemas/Employee-write'
    Contract.jsonld-read:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'Name of the contract'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the contract'
          type: string
        employer:
          maxLength: 255
          description: 'name of the employer'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        organization:
          maxLength: 255
          description: 'The organisation where this contract belongs to'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        standardHours:
          description: 'The standard amount of hours per week for this contract'
          type: integer
        agreement:
          maxLength: 2550
          description: 'agreement of the contract'
          type: string
        jobFunction:
          maxLength: 255
          description: 'function of the contract'
          type: string
        duration:
          description: 'how many months the contract is set to.'
          type: integer
        salary:
          description: 'Salary of the function.'
          type: integer
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        employee:
          description: 'The Employee to which this contract belongs to'
          $ref: '#/components/schemas/Employee.jsonld-read'
      required:
        - name
        - description
        - employer
        - organization
        - standardHours
        - agreement
        - jobFunction
        - duration
        - salary
    Contract.jsonld-write:
      type: object
      description: ''
      required:
        - name
        - description
        - employer
        - organization
        - standardHours
        - agreement
        - jobFunction
        - duration
        - salary
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of the contract'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the contract'
          type: string
        employer:
          maxLength: 255
          description: 'name of the employer'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        organization:
          maxLength: 255
          description: 'The organisation where this contract belongs to'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        standardHours:
          description: 'The standard amount of hours per week for this contract'
          type: integer
        agreement:
          maxLength: 2550
          description: 'agreement of the contract'
          type: string
        jobFunction:
          maxLength: 255
          description: 'function of the contract'
          type: string
        duration:
          description: 'how many months the contract is set to.'
          type: integer
        salary:
          description: 'Salary of the function.'
          type: integer
        employee:
          description: 'The Employee to which this contract belongs to'
          $ref: '#/components/schemas/Employee.jsonld-write'
    Education-read:
      type: object
      description: ''
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this Education.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of the education'
          type: string
        description:
          description: 'The description of the education'
          type: string
          nullable: true
        startDate:
          description: 'The moment this education starts.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The moment this education ends.'
          type: string
          format: date-time
          nullable: true
        institution:
          maxLength: 255
          description: 'The institution of this Education.'
          type: string
          nullable: true
        degreeGrantedStatus:
          description: 'The degree granted status of this education. **Granted**, **notGranted**'
          type: string
          nullable: true
        iscedEducationLevelCode:
          description: 'The Isced Education Level Code of this Education.'
          type: string
          nullable: true
        employee:
          $ref: '#/components/schemas/Employee-read'
    Education-write:
      type: object
      description: ''
      properties:
        name:
          description: 'The name of the education'
          type: string
        description:
          description: 'The description of the education'
          type: string
          nullable: true
        startDate:
          description: 'The moment this education starts.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The moment this education ends.'
          type: string
          format: date-time
          nullable: true
        institution:
          maxLength: 255
          description: 'The institution of this Education.'
          type: string
          nullable: true
        degreeGrantedStatus:
          description: 'The degree granted status of this education. **Granted**, **notGranted**'
          type: string
          nullable: true
        iscedEducationLevelCode:
          description: 'The Isced Education Level Code of this Education.'
          type: string
          nullable: true
        employee:
          $ref: '#/components/schemas/Employee-write'
    Education.jsonld-read:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this Education.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of the education'
          type: string
        description:
          description: 'The description of the education'
          type: string
          nullable: true
        startDate:
          description: 'The moment this education starts.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The moment this education ends.'
          type: string
          format: date-time
          nullable: true
        institution:
          maxLength: 255
          description: 'The institution of this Education.'
          type: string
          nullable: true
        degreeGrantedStatus:
          description: 'The degree granted status of this education. **Granted**, **notGranted**'
          type: string
          nullable: true
        iscedEducationLevelCode:
          description: 'The Isced Education Level Code of this Education.'
          type: string
          nullable: true
        employee:
          $ref: '#/components/schemas/Employee.jsonld-read'
    Education.jsonld-write:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of the education'
          type: string
        description:
          description: 'The description of the education'
          type: string
          nullable: true
        startDate:
          description: 'The moment this education starts.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The moment this education ends.'
          type: string
          format: date-time
          nullable: true
        institution:
          maxLength: 255
          description: 'The institution of this Education.'
          type: string
          nullable: true
        degreeGrantedStatus:
          description: 'The degree granted status of this education. **Granted**, **notGranted**'
          type: string
          nullable: true
        iscedEducationLevelCode:
          description: 'The Isced Education Level Code of this Education.'
          type: string
          nullable: true
        employee:
          $ref: '#/components/schemas/Employee.jsonld-write'
    Employee-read:
      type: object
      description: 'All properties that the entity Employee holds. An Employee is a human with goals, skills and/or interests.'
      properties:
        id:
          format: uuid
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        person:
          maxLength: 255
          description: 'The person that is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        organization:
          maxLength: 255
          description: 'The organisation where this person is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        goals:
          type: array
          items:
            $ref: '#/components/schemas/Goal-read'
        interests:
          type: array
          items:
            $ref: '#/components/schemas/Interest-read'
        competencies:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Competence-read'
        skills:
          type: array
          items:
            $ref: '#/components/schemas/Skill-read'
        jobFunctions:
          type: array
          items:
            $ref: '#/components/schemas/JobFunction-read'
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/Contract-read'
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Application-read'
        hasPoliceCertificate:
          description: 'Whether or not the employee has submitted a police certificate (certificate of good conduct, certificate of conduct, etc)'
          type: boolean
        educations:
          type: array
          items:
            $ref: '#/components/schemas/Education-read'
      required:
        - person
    Employee-write:
      type: object
      description: 'All properties that the entity Employee holds. An Employee is a human with goals, skills and/or interests.'
      required:
        - person
      properties:
        person:
          maxLength: 255
          description: 'The person that is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        organization:
          maxLength: 255
          description: 'The organisation where this person is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        goals:
          type: array
          items:
            $ref: '#/components/schemas/Goal-write'
        interests:
          type: array
          items:
            $ref: '#/components/schemas/Interest-write'
        competencies:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Competence-write'
        skills:
          type: array
          items:
            $ref: '#/components/schemas/Skill-write'
        jobFunctions:
          type: array
          items:
            $ref: '#/components/schemas/JobFunction-write'
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/Contract-write'
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Application-write'
        hasPoliceCertificate:
          description: 'Whether or not the employee has submitted a police certificate (certificate of good conduct, certificate of conduct, etc)'
          type: boolean
        educations:
          type: array
          items:
            $ref: '#/components/schemas/Education-write'
    Employee.jsonld-read:
      type: object
      description: 'All properties that the entity Employee holds. An Employee is a human with goals, skills and/or interests.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        person:
          maxLength: 255
          description: 'The person that is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        organization:
          maxLength: 255
          description: 'The organisation where this person is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        goals:
          type: array
          items:
            $ref: '#/components/schemas/Goal.jsonld-read'
        interests:
          type: array
          items:
            $ref: '#/components/schemas/Interest.jsonld-read'
        competencies:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Competence.jsonld-read'
        skills:
          type: array
          items:
            $ref: '#/components/schemas/Skill.jsonld-read'
        jobFunctions:
          type: array
          items:
            $ref: '#/components/schemas/JobFunction.jsonld-read'
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/Contract.jsonld-read'
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Application.jsonld-read'
        hasPoliceCertificate:
          description: 'Whether or not the employee has submitted a police certificate (certificate of good conduct, certificate of conduct, etc)'
          type: boolean
        educations:
          type: array
          items:
            $ref: '#/components/schemas/Education.jsonld-read'
      required:
        - person
    Employee.jsonld-write:
      type: object
      description: 'All properties that the entity Employee holds. An Employee is a human with goals, skills and/or interests.'
      required:
        - person
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        person:
          maxLength: 255
          description: 'The person that is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        organization:
          maxLength: 255
          description: 'The organisation where this person is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        goals:
          type: array
          items:
            $ref: '#/components/schemas/Goal.jsonld-write'
        interests:
          type: array
          items:
            $ref: '#/components/schemas/Interest.jsonld-write'
        competencies:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Competence.jsonld-write'
        skills:
          type: array
          items:
            $ref: '#/components/schemas/Skill.jsonld-write'
        jobFunctions:
          type: array
          items:
            $ref: '#/components/schemas/JobFunction.jsonld-write'
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/Contract.jsonld-write'
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Application.jsonld-write'
        hasPoliceCertificate:
          description: 'Whether or not the employee has submitted a police certificate (certificate of good conduct, certificate of conduct, etc)'
          type: boolean
        educations:
          type: array
          items:
            $ref: '#/components/schemas/Education.jsonld-write'
    Goal-read:
      type: object
      description: ''
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'name of the goal'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the goal'
          type: string
        priority:
          maxLength: 255
          description: 'Priority of the goal **short-term**, **med-term**, **long-term**'
          type: string
        status:
          maxLength: 255
          description: 'Status of the goal'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        employee:
          description: 'The Employee to which this Goal belongs to'
          $ref: '#/components/schemas/Employee-read'
      required:
        - name
        - description
        - priority
        - status
    Goal-write:
      type: object
      description: ''
      required:
        - name
        - description
        - priority
        - status
      properties:
        name:
          maxLength: 255
          description: 'name of the goal'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the goal'
          type: string
        priority:
          maxLength: 255
          description: 'Priority of the goal **short-term**, **med-term**, **long-term**'
          type: string
        status:
          maxLength: 255
          description: 'Status of the goal'
          type: string
        employee:
          description: 'The Employee to which this Goal belongs to'
          $ref: '#/components/schemas/Employee-write'
    Goal.jsonld-read:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'name of the goal'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the goal'
          type: string
        priority:
          maxLength: 255
          description: 'Priority of the goal **short-term**, **med-term**, **long-term**'
          type: string
        status:
          maxLength: 255
          description: 'Status of the goal'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        employee:
          description: 'The Employee to which this Goal belongs to'
          $ref: '#/components/schemas/Employee.jsonld-read'
      required:
        - name
        - description
        - priority
        - status
    Goal.jsonld-write:
      type: object
      description: ''
      required:
        - name
        - description
        - priority
        - status
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'name of the goal'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the goal'
          type: string
        priority:
          maxLength: 255
          description: 'Priority of the goal **short-term**, **med-term**, **long-term**'
          type: string
        status:
          maxLength: 255
          description: 'Status of the goal'
          type: string
        employee:
          description: 'The Employee to which this Goal belongs to'
          $ref: '#/components/schemas/Employee.jsonld-write'
    Interest-read:
      type: object
      description: ''
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'Name of the interest'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the interest'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        employee:
          description: 'The Employee to which this Interest belongs to'
          $ref: '#/components/schemas/Employee-read'
      required:
        - name
        - description
    Interest-write:
      type: object
      description: ''
      required:
        - name
        - description
      properties:
        name:
          maxLength: 255
          description: 'Name of the interest'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the interest'
          type: string
        employee:
          description: 'The Employee to which this Interest belongs to'
          $ref: '#/components/schemas/Employee-write'
    Interest.jsonld-read:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'Name of the interest'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the interest'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        employee:
          description: 'The Employee to which this Interest belongs to'
          $ref: '#/components/schemas/Employee.jsonld-read'
      required:
        - name
        - description
    Interest.jsonld-write:
      type: object
      description: ''
      required:
        - name
        - description
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of the interest'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the interest'
          type: string
        employee:
          description: 'The Employee to which this Interest belongs to'
          $ref: '#/components/schemas/Employee.jsonld-write'
    JobFunction-read:
      type: object
      description: ''
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'Name of the Job Function'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the Job Function'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        esco:
          maxLength: 255
          description: 'The ESCO where this Jobfunction is related too'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        employee:
          description: 'The Employee to which this jobFunction belongs to'
          $ref: '#/components/schemas/Employee-read'
      required:
        - name
        - description
    JobFunction-write:
      type: object
      description: ''
      required:
        - name
        - description
      properties:
        name:
          maxLength: 255
          description: 'Name of the Job Function'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the Job Function'
          type: string
        esco:
          maxLength: 255
          description: 'The ESCO where this Jobfunction is related too'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        employee:
          description: 'The Employee to which this jobFunction belongs to'
          $ref: '#/components/schemas/Employee-write'
    JobFunction.jsonld-read:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'Name of the Job Function'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the Job Function'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        esco:
          maxLength: 255
          description: 'The ESCO where this Jobfunction is related too'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        employee:
          description: 'The Employee to which this jobFunction belongs to'
          $ref: '#/components/schemas/Employee.jsonld-read'
      required:
        - name
        - description
    JobFunction.jsonld-write:
      type: object
      description: ''
      required:
        - name
        - description
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of the Job Function'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the Job Function'
          type: string
        esco:
          maxLength: 255
          description: 'The ESCO where this Jobfunction is related too'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        employee:
          description: 'The Employee to which this jobFunction belongs to'
          $ref: '#/components/schemas/Employee.jsonld-write'
    JobPosting-read:
      type: object
      description: ''
      properties:
        id:
          format: uuid
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'The name of this Job Posting'
          type: string
        description:
          maxLength: 7500
          description: 'The description of this JobPosting'
          type: string
          nullable: true
        title:
          maxLength: 255
          description: 'The title of this Job Posting'
          type: string
        employmentType:
          description: 'The type of employment **full-time**, **part-time**, **temporary**, **seasonal**, **internship**'
          type: string
        educationRequirements:
          description: 'The education requirements of this JobPosting'
          type: array
          items:
            type: string
          nullable: true
        summary:
          maxLength: 255
          description: 'The summary requirements of this JobPosting'
          type: string
          nullable: true
        baseSalary:
          description: 'Salary of the jobposting.'
          type: integer
          nullable: true
        salaryCurrency:
          maxLength: 255
          description: 'The salary currency(coded using ISO 4217 ) of this jobPosting'
          type: string
          nullable: true
        jobLocationType:
          maxLength: 255
          description: 'A description of the job location (e.g TELECOMMUTE for telecommute jobs).'
          type: string
        hiringOrganization:
          description: 'The organization that hires the person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        jobStartDate:
          description: 'The start date of the contract'
          type: string
          format: date-time
        validThrough:
          description: 'The end date of the application procces'
          type: string
          format: date-time
          nullable: true
        standardHours:
          description: 'The standard amount of hours per week for this JobPosting'
          type: integer
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - title
        - employmentType
        - standardHours
    JobPosting-write:
      type: object
      description: ''
      required:
        - name
        - title
        - employmentType
        - standardHours
      properties:
        name:
          maxLength: 255
          description: 'The name of this Job Posting'
          type: string
        description:
          maxLength: 7500
          description: 'The description of this JobPosting'
          type: string
          nullable: true
        title:
          maxLength: 255
          description: 'The title of this Job Posting'
          type: string
        employmentType:
          description: 'The type of employment **full-time**, **part-time**, **temporary**, **seasonal**, **internship**'
          type: string
        educationRequirements:
          description: 'The education requirements of this JobPosting'
          type: array
          items:
            type: string
          nullable: true
        summary:
          maxLength: 255
          description: 'The summary requirements of this JobPosting'
          type: string
          nullable: true
        baseSalary:
          description: 'Salary of the jobposting.'
          type: integer
          nullable: true
        salaryCurrency:
          maxLength: 255
          description: 'The salary currency(coded using ISO 4217 ) of this jobPosting'
          type: string
          nullable: true
        jobLocationType:
          maxLength: 255
          description: 'A description of the job location (e.g TELECOMMUTE for telecommute jobs).'
          type: string
        hiringOrganization:
          description: 'The organization that hires the person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        jobStartDate:
          description: 'The start date of the contract'
          type: string
          format: date-time
        validThrough:
          description: 'The end date of the application procces'
          type: string
          format: date-time
          nullable: true
        standardHours:
          description: 'The standard amount of hours per week for this JobPosting'
          type: integer
    JobPosting.jsonld-read:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'The name of this Job Posting'
          type: string
        description:
          maxLength: 7500
          description: 'The description of this JobPosting'
          type: string
          nullable: true
        title:
          maxLength: 255
          description: 'The title of this Job Posting'
          type: string
        employmentType:
          description: 'The type of employment **full-time**, **part-time**, **temporary**, **seasonal**, **internship**'
          type: string
        educationRequirements:
          description: 'The education requirements of this JobPosting'
          type: array
          items:
            type: string
          nullable: true
        summary:
          maxLength: 255
          description: 'The summary requirements of this JobPosting'
          type: string
          nullable: true
        baseSalary:
          description: 'Salary of the jobposting.'
          type: integer
          nullable: true
        salaryCurrency:
          maxLength: 255
          description: 'The salary currency(coded using ISO 4217 ) of this jobPosting'
          type: string
          nullable: true
        jobLocationType:
          maxLength: 255
          description: 'A description of the job location (e.g TELECOMMUTE for telecommute jobs).'
          type: string
        hiringOrganization:
          description: 'The organization that hires the person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        jobStartDate:
          description: 'The start date of the contract'
          type: string
          format: date-time
        validThrough:
          description: 'The end date of the application procces'
          type: string
          format: date-time
          nullable: true
        standardHours:
          description: 'The standard amount of hours per week for this JobPosting'
          type: integer
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - title
        - employmentType
        - standardHours
    JobPosting.jsonld-write:
      type: object
      description: ''
      required:
        - name
        - title
        - employmentType
        - standardHours
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'The name of this Job Posting'
          type: string
        description:
          maxLength: 7500
          description: 'The description of this JobPosting'
          type: string
          nullable: true
        title:
          maxLength: 255
          description: 'The title of this Job Posting'
          type: string
        employmentType:
          description: 'The type of employment **full-time**, **part-time**, **temporary**, **seasonal**, **internship**'
          type: string
        educationRequirements:
          description: 'The education requirements of this JobPosting'
          type: array
          items:
            type: string
          nullable: true
        summary:
          maxLength: 255
          description: 'The summary requirements of this JobPosting'
          type: string
          nullable: true
        baseSalary:
          description: 'Salary of the jobposting.'
          type: integer
          nullable: true
        salaryCurrency:
          maxLength: 255
          description: 'The salary currency(coded using ISO 4217 ) of this jobPosting'
          type: string
          nullable: true
        jobLocationType:
          maxLength: 255
          description: 'A description of the job location (e.g TELECOMMUTE for telecommute jobs).'
          type: string
        hiringOrganization:
          description: 'The organization that hires the person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        jobStartDate:
          description: 'The start date of the contract'
          type: string
          format: date-time
        validThrough:
          description: 'The end date of the application procces'
          type: string
          format: date-time
          nullable: true
        standardHours:
          description: 'The standard amount of hours per week for this JobPosting'
          type: integer
    Skill-read:
      type: object
      description: ''
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'Name of the Skill'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the skill'
          type: string
        level:
          maxLength: 255
          description: 'Level of the skill **beginner**, **intermediate**, **advanced**'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        esco:
          maxLength: 255
          description: 'The ESCO where this Skill is related too'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        employee:
          description: 'The Employee to which this skill belongs to'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Employee-read'
      required:
        - name
        - description
        - level
    Skill-write:
      type: object
      description: ''
      required:
        - name
        - description
        - level
      properties:
        name:
          maxLength: 255
          description: 'Name of the Skill'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the skill'
          type: string
        level:
          maxLength: 255
          description: 'Level of the skill **beginner**, **intermediate**, **advanced**'
          type: string
        esco:
          maxLength: 255
          description: 'The ESCO where this Skill is related too'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        employee:
          description: 'The Employee to which this skill belongs to'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Employee-write'
    Skill.jsonld-read:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'Name of the Skill'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the skill'
          type: string
        level:
          maxLength: 255
          description: 'Level of the skill **beginner**, **intermediate**, **advanced**'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        esco:
          maxLength: 255
          description: 'The ESCO where this Skill is related too'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        employee:
          description: 'The Employee to which this skill belongs to'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Employee.jsonld-read'
      required:
        - name
        - description
        - level
    Skill.jsonld-write:
      type: object
      description: ''
      required:
        - name
        - description
        - level
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of the Skill'
          type: string
        description:
          maxLength: 2550
          description: 'Description of the skill'
          type: string
        level:
          maxLength: 255
          description: 'Level of the skill **beginner**, **intermediate**, **advanced**'
          type: string
        esco:
          maxLength: 255
          description: 'The ESCO where this Skill is related too'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        employee:
          description: 'The Employee to which this skill belongs to'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Employee.jsonld-write'
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes: {  }
security: []
tags: []
