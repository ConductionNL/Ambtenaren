openapi: 3.0.2
info:
  title: 'Medewerker Catalogus Component'
  version: V.0.1
  description: |
    API Details
    - Component: Medewerker Catalogus Component
    - Reference: mrc
    - Enviroment: dev
    - Version: V.0.1
    - Repository: [online](https://github.com/ConductionNL/medewerkercatalogus/api/helm) / [zip](https://github.com/ConductionNL/medewerkercatalogus/api/helm/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/mrc-php) 
    - Datamodel: [postman](/schema/mrc.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [mwb](/schema/datamodel.mwb) 
    
    'Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.'         
    
paths:
  /applications:
    get:
      tags:
        - Application
      operationId: getApplicationCollection
      summary: 'Retrieves the collection of Application resources.'
      responses:
        200:
          description: 'Application collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[motivation]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: status
          in: query
          required: false
          schema:
            type: string
        -
          name: 'status[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: motivation
          in: query
          required: false
          schema:
            type: string
        -
          name: 'motivation[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Application
      operationId: postApplicationCollection
      summary: 'Creates a Application resource.'
      responses:
        201:
          description: 'Application resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
          links:
            GetApplicationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getApplicationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /applications/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Application:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Application-write'
        description: 'The new Application resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/applications/{id}':
    get:
      tags:
        - Application
      operationId: getApplicationItem
      summary: 'Retrieves a Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Application resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Application
      operationId: deleteApplicationItem
      summary: 'Removes the Application resource.'
      responses:
        204:
          description: 'Application resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Application
      operationId: putApplicationItem
      summary: 'Replaces the Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Application resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Application:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Application-write'
        description: 'The updated Application resource'
    patch:
      tags:
        - Application
      operationId: patchApplicationItem
      summary: 'Updates the Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Application resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Application-write'
        description: 'The updated Application resource'
  /audit_trails:
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailCollection
      summary: 'Retrieves the collection of AuditTrail resources.'
      responses:
        200:
          description: 'AuditTrail collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      parameters:
        -
          name: 'order[application]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[request]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[user]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[subject]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resourceType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[session]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: request
          in: query
          required: false
          schema:
            type: string
        -
          name: 'request[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: subject
          in: query
          required: false
          schema:
            type: string
        -
          name: 'subject[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resourceType
          in: query
          required: false
          schema:
            type: string
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contentType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contentType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: 'content[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: session
          in: query
          required: false
          schema:
            type: string
        -
          name: 'session[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - AuditTrail
      operationId: postAuditTrailCollection
      summary: 'Creates a AuditTrail resource.'
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuditTrailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The new AuditTrail resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/audit_trails/{id}':
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailItem
      summary: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AuditTrail resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - AuditTrail
      operationId: deleteAuditTrailItem
      summary: 'Removes the AuditTrail resource.'
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - AuditTrail
      operationId: putAuditTrailItem
      summary: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
    patch:
      tags:
        - AuditTrail
      operationId: patchAuditTrailItem
      summary: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
  /change_logs:
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogCollection
      summary: 'Retrieves the collection of ChangeLog resources.'
      responses:
        200:
          description: 'ChangeLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      parameters:
        -
          name: 'order[action]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectClass]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[version]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[username]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: action
          in: query
          required: false
          schema:
            type: string
        -
          name: 'action[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectId
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectId[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectClass
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectClass[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: version
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'version[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ChangeLog
      operationId: postChangeLogCollection
      summary: 'Creates a ChangeLog resource.'
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getChangeLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The new ChangeLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/change_logs/{id}':
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogItem
      summary: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ChangeLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ChangeLog
      operationId: deleteChangeLogItem
      summary: 'Removes the ChangeLog resource.'
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ChangeLog
      operationId: putChangeLogItem
      summary: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
    patch:
      tags:
        - ChangeLog
      operationId: patchChangeLogItem
      summary: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
  /competences:
    get:
      tags:
        - Competence
      operationId: getCompetenceCollection
      summary: 'Retrieves the collection of Competence resources.'
      responses:
        200:
          description: 'Competence collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Competence:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Competence:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[grade]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: grade
          in: query
          required: false
          schema:
            type: string
        -
          name: 'grade[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Competence
      operationId: postCompetenceCollection
      summary: 'Creates a Competence resource.'
      responses:
        201:
          description: 'Competence resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Competence:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Competence:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Competence-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Competence-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Competence-read'
          links:
            GetCompetenceItem:
              parameters:
                id: '$response.body#/id'
              operationId: getCompetenceItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /competences/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Competence:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Competence:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Competence-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Competence-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Competence-write'
        description: 'The new Competence resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/competences/{id}':
    get:
      tags:
        - Competence
      operationId: getCompetenceItem
      summary: 'Retrieves a Competence resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Competence resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Competence:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Competence:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Competence-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Competence-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Competence-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Competence
      operationId: deleteCompetenceItem
      summary: 'Removes the Competence resource.'
      responses:
        204:
          description: 'Competence resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Competence
      operationId: putCompetenceItem
      summary: 'Replaces the Competence resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Competence resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Competence:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Competence:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Competence-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Competence-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Competence-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Competence:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Competence:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Competence-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Competence-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Competence-write'
        description: 'The updated Competence resource'
    patch:
      tags:
        - Competence
      operationId: patchCompetenceItem
      summary: 'Updates the Competence resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Competence resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Competence:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Competence:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Competence-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Competence-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Competence-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Competence-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Competence:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Competence-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Competence-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Competence-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Competence-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Competence-write'
        description: 'The updated Competence resource'
  /employees:
    get:
      tags:
        - Employee
      operationId: getEmployeeCollection
      summary: 'Retrieves the collection of Employee resources.'
      responses:
        200:
          description: 'Employee collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[person]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[organization]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: person
          in: query
          required: false
          schema:
            type: string
        -
          name: 'person[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Employee
      operationId: postEmployeeCollection
      summary: 'Creates a Employee resource.'
      responses:
        201:
          description: 'Employee resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
          links:
            GetEmployeeItem:
              parameters:
                id: '$response.body#/id'
              operationId: getEmployeeItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /employees/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Employee:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee-write'
        description: 'The new Employee resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/employees/{id}':
    get:
      tags:
        - Employee
      operationId: getEmployeeItem
      summary: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Employee resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Employee
      operationId: putEmployeeItem
      summary: 'Replaces the Employee resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Employee resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Employee:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee-write'
        description: 'The updated Employee resource'
    delete:
      tags:
        - Employee
      operationId: deleteEmployeeItem
      summary: 'Removes the Employee resource.'
      responses:
        204:
          description: 'Employee resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/employees/{id}/audit_trail':
    get:
      tags:
        - Employee
      operationId: get_audit_trailEmployeeItem
      summary: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Employee resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/employees/{id}/change_log':
    get:
      tags:
        - Employee
      operationId: get_change_logsEmployeeItem
      summary: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Employee resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /goals:
    get:
      tags:
        - Goal
      operationId: getGoalCollection
      summary: 'Retrieves the collection of Goal resources.'
      responses:
        200:
          description: 'Goal collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Goal:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Goal:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[priority]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: priority
          in: query
          required: false
          schema:
            type: string
        -
          name: 'priority[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: status
          in: query
          required: false
          schema:
            type: string
        -
          name: 'status[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Goal
      operationId: postGoalCollection
      summary: 'Creates a Goal resource.'
      responses:
        201:
          description: 'Goal resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Goal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Goal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Goal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Goal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Goal-read'
          links:
            GetGoalItem:
              parameters:
                id: '$response.body#/id'
              operationId: getGoalItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /goals/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Goal:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Goal:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Goal-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Goal-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Goal-write'
        description: 'The new Goal resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/goals/{id}':
    get:
      tags:
        - Goal
      operationId: getGoalItem
      summary: 'Retrieves a Goal resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Goal resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Goal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Goal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Goal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Goal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Goal-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Goal
      operationId: deleteGoalItem
      summary: 'Removes the Goal resource.'
      responses:
        204:
          description: 'Goal resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Goal
      operationId: putGoalItem
      summary: 'Replaces the Goal resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Goal resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Goal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Goal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Goal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Goal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Goal-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Goal:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Goal:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Goal-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Goal-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Goal-write'
        description: 'The updated Goal resource'
    patch:
      tags:
        - Goal
      operationId: patchGoalItem
      summary: 'Updates the Goal resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Goal resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Goal:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Goal:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Goal-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Goal-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Goal-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Goal-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Goal:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Goal-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Goal-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Goal-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Goal-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Goal-write'
        description: 'The updated Goal resource'
  /interests:
    get:
      tags:
        - Interest
      operationId: getInterestCollection
      summary: 'Retrieves the collection of Interest resources.'
      responses:
        200:
          description: 'Interest collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Interest:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Interest:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Interest
      operationId: postInterestCollection
      summary: 'Creates a Interest resource.'
      responses:
        201:
          description: 'Interest resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Interest:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Interest:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Interest-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Interest-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Interest-read'
          links:
            GetInterestItem:
              parameters:
                id: '$response.body#/id'
              operationId: getInterestItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /interests/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Interest:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Interest:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Interest-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Interest-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Interest-write'
        description: 'The new Interest resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/interests/{id}':
    get:
      tags:
        - Interest
      operationId: getInterestItem
      summary: 'Retrieves a Interest resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Interest resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Interest:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Interest:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Interest-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Interest-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Interest-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Interest
      operationId: deleteInterestItem
      summary: 'Removes the Interest resource.'
      responses:
        204:
          description: 'Interest resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Interest
      operationId: putInterestItem
      summary: 'Replaces the Interest resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Interest resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Interest:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Interest:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Interest-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Interest-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Interest-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Interest:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Interest:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Interest-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Interest-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Interest-write'
        description: 'The updated Interest resource'
    patch:
      tags:
        - Interest
      operationId: patchInterestItem
      summary: 'Updates the Interest resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Interest resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Interest:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Interest:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Interest-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Interest-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Interest-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Interest-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Interest:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Interest-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Interest-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Interest-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Interest-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Interest-write'
        description: 'The updated Interest resource'
  /job_postings:
    get:
      tags:
        - JobPosting
      operationId: getJobPostingCollection
      summary: 'Retrieves the collection of JobPosting resources.'
      responses:
        200:
          description: 'JobPosting collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/JobPosting:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/JobPosting:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[title]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[employmentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[hiringOrganization]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[jobStartDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[validThrough]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[standardHours]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'jobStartDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'jobStartDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'jobStartDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'jobStartDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'validThrough[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'validThrough[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'validThrough[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'validThrough[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: title
          in: query
          required: false
          schema:
            type: string
        -
          name: 'title[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: employmentType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'employmentType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: hiringOrganization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'hiringOrganization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: jobStartDate
          in: query
          required: false
          schema:
            type: string
        -
          name: 'jobStartDate[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: validThrough
          in: query
          required: false
          schema:
            type: string
        -
          name: 'validThrough[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: standardHours
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'standardHours[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - JobPosting
      operationId: postJobPostingCollection
      summary: 'Creates a JobPosting resource.'
      responses:
        201:
          description: 'JobPosting resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobPosting:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobPosting:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/html:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
          links:
            GetJobPostingItem:
              parameters:
                id: '$response.body#/id'
              operationId: getJobPostingItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /job_postings/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/JobPosting:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/JobPosting:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/json:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          text/html:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
        description: 'The new JobPosting resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/job_postings/{id}':
    get:
      tags:
        - JobPosting
      operationId: getJobPostingItem
      summary: 'Retrieves a JobPosting resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'JobPosting resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobPosting:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobPosting:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/html:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - JobPosting
      operationId: putJobPostingItem
      summary: 'Replaces the JobPosting resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'JobPosting resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobPosting:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobPosting:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/html:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/JobPosting:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/JobPosting:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/json:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
          text/html:
            schema:
              $ref: '#/components/schemas/JobPosting-write'
        description: 'The updated JobPosting resource'
    delete:
      tags:
        - JobPosting
      operationId: deleteJobPostingItem
      summary: 'Removes the JobPosting resource.'
      responses:
        204:
          description: 'JobPosting resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/job_postings/{id}/audit_trail':
    get:
      tags:
        - JobPosting
      operationId: get_audit_trailJobPostingItem
      summary: 'Retrieves a JobPosting resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'JobPosting resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobPosting:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobPosting:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/html:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/job_postings/{id}/change_log':
    get:
      tags:
        - JobPosting
      operationId: get_change_logsJobPostingItem
      summary: 'Retrieves a JobPosting resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'JobPosting resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobPosting:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobPosting:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
            text/html:
              schema:
                $ref: '#/components/schemas/JobPosting-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /skills:
    get:
      tags:
        - Skill
      operationId: getSkillCollection
      summary: 'Retrieves the collection of Skill resources.'
      responses:
        200:
          description: 'Skill collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Skill:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Skill:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[level]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: level
          in: query
          required: false
          schema:
            type: string
        -
          name: 'level[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Skill
      operationId: postSkillCollection
      summary: 'Creates a Skill resource.'
      responses:
        201:
          description: 'Skill resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Skill:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Skill:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Skill-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Skill-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Skill-read'
          links:
            GetSkillItem:
              parameters:
                id: '$response.body#/id'
              operationId: getSkillItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /skills/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Skill:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Skill:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Skill-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Skill-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Skill-write'
        description: 'The new Skill resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/skills/{id}':
    get:
      tags:
        - Skill
      operationId: getSkillItem
      summary: 'Retrieves a Skill resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Skill resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Skill:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Skill:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Skill-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Skill-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Skill-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Skill
      operationId: deleteSkillItem
      summary: 'Removes the Skill resource.'
      responses:
        204:
          description: 'Skill resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Skill
      operationId: putSkillItem
      summary: 'Replaces the Skill resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Skill resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Skill:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Skill:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Skill-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Skill-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Skill-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Skill:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Skill:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Skill-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Skill-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Skill-write'
        description: 'The updated Skill resource'
    patch:
      tags:
        - Skill
      operationId: patchSkillItem
      summary: 'Updates the Skill resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Skill resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Skill:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Skill:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Skill-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Skill-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Skill-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Skill-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Skill:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Skill-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Skill-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Skill-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Skill-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Skill-write'
        description: 'The updated Skill resource'
components:
  schemas:
    Application-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the application'
          type: string
        description:
          description: 'Description of the application'
          type: string
        status:
          description: 'Status of the application'
          type: string
        motivation:
          description: 'Motivation for the application'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
        employee:
          description: 'The Employee to which this Goal belongs to'
          $ref: '#/components/schemas/Employee-read'
      required:
        - name
        - description
        - status
        - motivation
    Application-write:
      type: object
      description: ''
      required:
        - name
        - description
        - status
        - motivation
      properties:
        name:
          description: 'Name of the application'
          type: string
        description:
          description: 'Description of the application'
          type: string
        status:
          description: 'Status of the application'
          type: string
        motivation:
          description: 'Motivation for the application'
          type: string
        employee:
          description: 'The Employee to which this Goal belongs to'
          $ref: '#/components/schemas/Employee-write'
    'Application:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the application'
          type: string
        description:
          description: 'Description of the application'
          type: string
        status:
          description: 'Status of the application'
          type: string
        motivation:
          description: 'Motivation for the application'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
        employee:
          description: 'The Employee to which this Goal belongs to'
          $ref: '#/components/schemas/Employee:jsonld-read'
      required:
        - name
        - description
        - status
        - motivation
    'Application:jsonld-write':
      type: object
      description: ''
      required:
        - name
        - description
        - status
        - motivation
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of the application'
          type: string
        description:
          description: 'Description of the application'
          type: string
        status:
          description: 'Status of the application'
          type: string
        motivation:
          description: 'Motivation for the application'
          type: string
        employee:
          description: 'The Employee to which this Goal belongs to'
          $ref: '#/components/schemas/Employee:jsonld-write'
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
        method:
          description: 'The method that was used'
          type: string
        accept:
          description: 'The contentType that was reqousted'
          type: string
        contentType:
          description: 'The contentType that was suplieds'
          type: string
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    'AuditTrail:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
        method:
          description: 'The method that was used'
          type: string
        accept:
          description: 'The contentType that was reqousted'
          type: string
        contentType:
          description: 'The contentType that was suplieds'
          type: string
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'AuditTrail:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    'ChangeLog:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'ChangeLog:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Competence-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'name of the competence'
          type: string
        description:
          description: 'Description of the competence'
          type: string
        grade:
          description: 'Grade of the competence'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
        employee:
          description: 'The Employee to which this Competence belongs to'
          $ref: '#/components/schemas/Employee-read'
      required:
        - name
        - description
        - grade
    Competence-write:
      type: object
      description: ''
      required:
        - name
        - description
        - grade
      properties:
        name:
          description: 'name of the competence'
          type: string
        description:
          description: 'Description of the competence'
          type: string
        grade:
          description: 'Grade of the competence'
          type: string
        employee:
          description: 'The Employee to which this Competence belongs to'
          $ref: '#/components/schemas/Employee-write'
    'Competence:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'name of the competence'
          type: string
        description:
          description: 'Description of the competence'
          type: string
        grade:
          description: 'Grade of the competence'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
        employee:
          description: 'The Employee to which this Competence belongs to'
          $ref: '#/components/schemas/Employee:jsonld-read'
      required:
        - name
        - description
        - grade
    'Competence:jsonld-write':
      type: object
      description: ''
      required:
        - name
        - description
        - grade
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'name of the competence'
          type: string
        description:
          description: 'Description of the competence'
          type: string
        grade:
          description: 'Grade of the competence'
          type: string
        employee:
          description: 'The Employee to which this Competence belongs to'
          $ref: '#/components/schemas/Employee:jsonld-write'
    Employee-read:
      type: object
      description: 'All properties that the entity Employee holds.'
      properties:
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        person:
          description: 'The person that is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        organization:
          description: 'The organisation where this person is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
        jobPosting:
          description: 'the JobPosting associated to this employee'
          $ref: '#/components/schemas/JobPosting-read'
        goals:
          type: array
          items:
            $ref: '#/components/schemas/Goal-read'
        interests:
          type: array
          items:
            $ref: '#/components/schemas/Interest-read'
        competencies:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Competence-read'
      required:
        - person
        - organization
    Employee-write:
      type: object
      description: 'All properties that the entity Employee holds.'
      required:
        - person
        - organization
      properties:
        person:
          description: 'The person that is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        organization:
          description: 'The organisation where this person is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        jobPosting:
          description: 'the JobPosting associated to this employee'
          $ref: '#/components/schemas/JobPosting-write'
        goals:
          type: array
          items:
            $ref: '#/components/schemas/Goal-write'
        interests:
          type: array
          items:
            $ref: '#/components/schemas/Interest-write'
        competencies:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Competence-write'
    'Employee:jsonld-read':
      type: object
      description: 'All properties that the entity Employee holds.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        person:
          description: 'The person that is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        organization:
          description: 'The organisation where this person is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
        jobPosting:
          description: 'the JobPosting associated to this employee'
          $ref: '#/components/schemas/JobPosting:jsonld-read'
        goals:
          type: array
          items:
            $ref: '#/components/schemas/Goal:jsonld-read'
        interests:
          type: array
          items:
            $ref: '#/components/schemas/Interest:jsonld-read'
        competencies:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Competence:jsonld-read'
      required:
        - person
        - organization
    'Employee:jsonld-write':
      type: object
      description: 'All properties that the entity Employee holds.'
      required:
        - person
        - organization
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        person:
          description: 'The person that is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        organization:
          description: 'The organisation where this person is employed'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        jobPosting:
          description: 'the JobPosting associated to this employee'
          $ref: '#/components/schemas/JobPosting:jsonld-write'
        goals:
          type: array
          items:
            $ref: '#/components/schemas/Goal:jsonld-write'
        interests:
          type: array
          items:
            $ref: '#/components/schemas/Interest:jsonld-write'
        competencies:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Competence:jsonld-write'
    Goal-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'name of the goal'
          type: string
        description:
          description: 'Description of the goal'
          type: string
        priority:
          description: 'Priority of the goal **short-term**, **med-term**, **long-term**'
          type: string
        status:
          description: 'Status of the goal'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
        employee:
          description: 'The Employee to which this Goal belongs to'
          $ref: '#/components/schemas/Employee-read'
      required:
        - name
        - description
        - priority
        - status
    Goal-write:
      type: object
      description: ''
      required:
        - name
        - description
        - priority
        - status
      properties:
        name:
          description: 'name of the goal'
          type: string
        description:
          description: 'Description of the goal'
          type: string
        priority:
          description: 'Priority of the goal **short-term**, **med-term**, **long-term**'
          type: string
        status:
          description: 'Status of the goal'
          type: string
        employee:
          description: 'The Employee to which this Goal belongs to'
          $ref: '#/components/schemas/Employee-write'
    'Goal:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'name of the goal'
          type: string
        description:
          description: 'Description of the goal'
          type: string
        priority:
          description: 'Priority of the goal **short-term**, **med-term**, **long-term**'
          type: string
        status:
          description: 'Status of the goal'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
        employee:
          description: 'The Employee to which this Goal belongs to'
          $ref: '#/components/schemas/Employee:jsonld-read'
      required:
        - name
        - description
        - priority
        - status
    'Goal:jsonld-write':
      type: object
      description: ''
      required:
        - name
        - description
        - priority
        - status
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'name of the goal'
          type: string
        description:
          description: 'Description of the goal'
          type: string
        priority:
          description: 'Priority of the goal **short-term**, **med-term**, **long-term**'
          type: string
        status:
          description: 'Status of the goal'
          type: string
        employee:
          description: 'The Employee to which this Goal belongs to'
          $ref: '#/components/schemas/Employee:jsonld-write'
    Interest-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the interest'
          type: string
        description:
          description: 'Description of the interest'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
        employee:
          description: 'The Employee to which this Interest belongs to'
          $ref: '#/components/schemas/Employee-read'
      required:
        - name
        - description
    Interest-write:
      type: object
      description: ''
      required:
        - name
        - description
      properties:
        name:
          description: 'Name of the interest'
          type: string
        description:
          description: 'Description of the interest'
          type: string
        employee:
          description: 'The Employee to which this Interest belongs to'
          $ref: '#/components/schemas/Employee-write'
    'Interest:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the interest'
          type: string
        description:
          description: 'Description of the interest'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
        employee:
          description: 'The Employee to which this Interest belongs to'
          $ref: '#/components/schemas/Employee:jsonld-read'
      required:
        - name
        - description
    'Interest:jsonld-write':
      type: object
      description: ''
      required:
        - name
        - description
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of the interest'
          type: string
        description:
          description: 'Description of the interest'
          type: string
        employee:
          description: 'The Employee to which this Interest belongs to'
          $ref: '#/components/schemas/Employee:jsonld-write'
    JobPosting-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Job Posting'
          type: string
        description:
          description: 'The description of this JobPosting'
          type: string
        title:
          description: 'The title of this Job Posting'
          type: string
        employmentType:
          description: 'The type of employment **full-time**, **part-time**, **temporary**, **seasonal**, **internship**'
          type: string
        hiringOrganization:
          description: 'The organization that hires the person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        jobStartDate:
          description: 'The start date of the contract'
          type: string
          format: date-time
        validThrough:
          description: 'The end date of the contract'
          type: string
          format: date-time
        standardHours:
          description: 'The standard amount of hours per week for this JobPosting'
          type: integer
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
        employee:
          description: 'the employee this JobPosting relates to'
          $ref: '#/components/schemas/Employee-read'
      required:
        - name
        - title
        - employmentType
        - standardHours
    JobPosting-write:
      type: object
      description: ''
      required:
        - name
        - title
        - employmentType
        - standardHours
      properties:
        name:
          description: 'The name of this Job Posting'
          type: string
        description:
          description: 'The description of this JobPosting'
          type: string
        title:
          description: 'The title of this Job Posting'
          type: string
        employmentType:
          description: 'The type of employment **full-time**, **part-time**, **temporary**, **seasonal**, **internship**'
          type: string
        hiringOrganization:
          description: 'The organization that hires the person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        jobStartDate:
          description: 'The start date of the contract'
          type: string
          format: date-time
        validThrough:
          description: 'The end date of the contract'
          type: string
          format: date-time
        standardHours:
          description: 'The standard amount of hours per week for this JobPosting'
          type: integer
        employee:
          description: 'the employee this JobPosting relates to'
          $ref: '#/components/schemas/Employee-write'
    'JobPosting:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Job Posting'
          type: string
        description:
          description: 'The description of this JobPosting'
          type: string
        title:
          description: 'The title of this Job Posting'
          type: string
        employmentType:
          description: 'The type of employment **full-time**, **part-time**, **temporary**, **seasonal**, **internship**'
          type: string
        hiringOrganization:
          description: 'The organization that hires the person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        jobStartDate:
          description: 'The start date of the contract'
          type: string
          format: date-time
        validThrough:
          description: 'The end date of the contract'
          type: string
          format: date-time
        standardHours:
          description: 'The standard amount of hours per week for this JobPosting'
          type: integer
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
        employee:
          description: 'the employee this JobPosting relates to'
          $ref: '#/components/schemas/Employee:jsonld-read'
      required:
        - name
        - title
        - employmentType
        - standardHours
    'JobPosting:jsonld-write':
      type: object
      description: ''
      required:
        - name
        - title
        - employmentType
        - standardHours
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this Job Posting'
          type: string
        description:
          description: 'The description of this JobPosting'
          type: string
        title:
          description: 'The title of this Job Posting'
          type: string
        employmentType:
          description: 'The type of employment **full-time**, **part-time**, **temporary**, **seasonal**, **internship**'
          type: string
        hiringOrganization:
          description: 'The organization that hires the person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        jobStartDate:
          description: 'The start date of the contract'
          type: string
          format: date-time
        validThrough:
          description: 'The end date of the contract'
          type: string
          format: date-time
        standardHours:
          description: 'The standard amount of hours per week for this JobPosting'
          type: integer
        employee:
          description: 'the employee this JobPosting relates to'
          $ref: '#/components/schemas/Employee:jsonld-write'
    Skill-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the Skill'
          type: string
        description:
          description: 'Description of the skill'
          type: string
        level:
          description: 'Level of the skill **beginner**, **intermediate**, **advanced**'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
        employee:
          description: 'The Employee to which this Goal belongs to'
          $ref: '#/components/schemas/Employee-read'
      required:
        - name
        - description
        - level
    Skill-write:
      type: object
      description: ''
      required:
        - name
        - description
        - level
      properties:
        name:
          description: 'Name of the Skill'
          type: string
        description:
          description: 'Description of the skill'
          type: string
        level:
          description: 'Level of the skill **beginner**, **intermediate**, **advanced**'
          type: string
        employee:
          description: 'The Employee to which this Goal belongs to'
          $ref: '#/components/schemas/Employee-write'
    'Skill:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of the Skill'
          type: string
        description:
          description: 'Description of the skill'
          type: string
        level:
          description: 'Level of the skill **beginner**, **intermediate**, **advanced**'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
        employee:
          description: 'The Employee to which this Goal belongs to'
          $ref: '#/components/schemas/Employee:jsonld-read'
      required:
        - name
        - description
        - level
    'Skill:jsonld-write':
      type: object
      description: ''
      required:
        - name
        - description
        - level
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of the Skill'
          type: string
        description:
          description: 'Description of the skill'
          type: string
        level:
          description: 'Level of the skill **beginner**, **intermediate**, **advanced**'
          type: string
        employee:
          description: 'The Employee to which this Goal belongs to'
          $ref: '#/components/schemas/Employee:jsonld-write'
definitions:
  Application-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'Name of the application'
        type: string
        example: 'application name'
        maxLength: 255
      description:
        description: 'Description of the application'
        type: string
        example: 'description of the application'
        maxLength: 2550
      status:
        description: 'Status of the application'
        type: string
        example: 'application status'
        maxLength: 255
      motivation:
        description: 'Motivation for the application'
        type: string
        example: 'motivation for the application'
        maxLength: 2550
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      employee:
        description: 'The Employee to which this Goal belongs to'
        type: \Employee
    required:
      - name
      - description
      - status
      - motivation
  Application-write:
    properties:
      name:
        description: 'Name of the application'
        type: string
        example: 'application name'
        maxLength: 255
      description:
        description: 'Description of the application'
        type: string
        example: 'description of the application'
        maxLength: 2550
      status:
        description: 'Status of the application'
        type: string
        example: 'application status'
        maxLength: 255
      motivation:
        description: 'Motivation for the application'
        type: string
        example: 'motivation for the application'
        maxLength: 2550
      employee:
        description: 'The Employee to which this Goal belongs to'
        type: \Employee
    required:
      - name
      - description
      - status
      - motivation
  AuditTrail-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
      application:
        description: 'The application that made the request'
        type: string
        format: url
        maxLength: 255
      request:
        description: 'The id of the request within that application'
        type: string
        format: url
        maxLength: 255
      user:
        description: 'The user on behalf of wich the request was made'
        type: string
        format: url
        maxLength: 255
      subject:
        description: '???'
        type: string
        maxLength: 255
      process:
        description: 'The procces on behalf of wich the request was made'
        type: string
        maxLength: 255
      dataElements:
        description: 'The moment this request was created'
        type: array
      dataSubjects:
        description: 'The moment this request was created'
        type: array
      resource:
        description: 'The resource that was requested'
        type: string
        maxLength: 255
      resourceType:
        description: 'The type of the resource that was requested'
        type: string
        maxLength: 255
      route:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        maxLength: 255
      method:
        description: 'The method that was used'
        type: string
        maxLength: 255
      accept:
        description: 'The contentType that was reqousted'
        type: string
        maxLength: 255
      contentType:
        description: 'The contentType that was suplieds'
        type: string
        maxLength: 255
      content:
        description: 'The moment this request was created'
        type: string
        maxLength: 2555
      ip:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      headers:
        description: 'The headers supplied by client'
        type: array
      statusCode:
        description: 'The status code returned to client'
        type: int
        example: '200'
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: bool
        example: 'false'
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: bool
        example: 'false'
      ok:
        description: 'Whether or not there where any problems'
        type: bool
        example: 'true'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2020-05-05 10:42:27'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2020-05-05 10:42:27'
    required: []
  AuditTrail-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
    required: []
  ChangeLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
      action:
        description: ''
        type: string
      objectId:
        description: ''
        type: string
      objectClass:
        description: ''
        type: string
      version:
        description: ''
        type: int
      data:
        description: ''
        type: array
      username:
        description: ''
        type: string
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2020-05-05 10:42:27'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2020-05-05 10:42:27'
    required: []
  ChangeLog-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
    required: []
  Competence-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'name of the competence'
        type: string
        example: 'competence name'
        maxLength: 255
      description:
        description: 'Description of the competence'
        type: string
        example: 'competence description'
        maxLength: 2550
      grade:
        description: 'Grade of the competence'
        type: string
        example: 'Grade of the competence'
        maxLength: 255
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      employee:
        description: 'The Employee to which this Competence belongs to'
        type: \Employee
    required:
      - name
      - description
      - grade
  Competence-write:
    properties:
      name:
        description: 'name of the competence'
        type: string
        example: 'competence name'
        maxLength: 255
      description:
        description: 'Description of the competence'
        type: string
        example: 'competence description'
        maxLength: 2550
      grade:
        description: 'Grade of the competence'
        type: string
        example: 'Grade of the competence'
        maxLength: 255
      employee:
        description: 'The Employee to which this Competence belongs to'
        type: \Employee
    required:
      - name
      - description
      - grade
  Employee-read:
    properties:
      id:
        description: ''
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      person:
        description: 'The person that is employed'
        type: string
        example: 'https://cc.zaakonline.nl/people/e2984465-190a-4562-829e-a8cca81aa35d'
        maxLength: 255
        format: url
      organization:
        description: 'The organisation where this person is employed'
        type: string
        example: 'https://cc.zaakonline.nl/organizations/e2984465-190a-4562-829e-a8cca81aa35d'
        maxLength: 255
        format: url
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      jobPosting:
        description: 'the JobPosting associated to this employee'
        type: \JobPosting
      goals: []
      interests: []
      competencies: []
    required:
      - person
      - organization
  Employee-write:
    properties:
      person:
        description: 'The person that is employed'
        type: string
        example: 'https://cc.zaakonline.nl/people/e2984465-190a-4562-829e-a8cca81aa35d'
        maxLength: 255
        format: url
      organization:
        description: 'The organisation where this person is employed'
        type: string
        example: 'https://cc.zaakonline.nl/organizations/e2984465-190a-4562-829e-a8cca81aa35d'
        maxLength: 255
        format: url
      jobPosting:
        description: 'the JobPosting associated to this employee'
        type: \JobPosting
      goals: []
      interests: []
      competencies: []
    required:
      - person
      - organization
  Goal-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'name of the goal'
        type: string
        example: 'goal name'
        maxLength: 255
      description:
        description: 'Description of the goal'
        type: string
        example: 'goal description'
        maxLength: 2550
      priority:
        description: 'Priority of the goal **short-term**, **med-term**, **long-term**'
        type: string
        example: 'goal priority'
        maxLength: 255
      status:
        description: 'Status of the goal'
        type: string
        example: 'goal status'
        maxLength: 255
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      employee:
        description: 'The Employee to which this Goal belongs to'
        type: \Employee
    required:
      - name
      - description
      - priority
      - status
  Goal-write:
    properties:
      name:
        description: 'name of the goal'
        type: string
        example: 'goal name'
        maxLength: 255
      description:
        description: 'Description of the goal'
        type: string
        example: 'goal description'
        maxLength: 2550
      priority:
        description: 'Priority of the goal **short-term**, **med-term**, **long-term**'
        type: string
        example: 'goal priority'
        maxLength: 255
      status:
        description: 'Status of the goal'
        type: string
        example: 'goal status'
        maxLength: 255
      employee:
        description: 'The Employee to which this Goal belongs to'
        type: \Employee
    required:
      - name
      - description
      - priority
      - status
  Interest-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'Name of the interest'
        type: string
        example: 'name of interest'
        maxLength: 255
      description:
        description: 'Description of the interest'
        type: string
        example: 'description of the interest'
        maxLength: 2550
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      employee:
        description: 'The Employee to which this Interest belongs to'
        type: \Employee
    required:
      - name
      - description
  Interest-write:
    properties:
      name:
        description: 'Name of the interest'
        type: string
        example: 'name of interest'
        maxLength: 255
      description:
        description: 'Description of the interest'
        type: string
        example: 'description of the interest'
        maxLength: 2550
      employee:
        description: 'The Employee to which this Interest belongs to'
        type: \Employee
    required:
      - name
      - description
  JobPosting-read:
    properties:
      id:
        description: ''
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this Job Posting'
        type: string
        example: 'my JobPosting'
        maxLength: 255
      description:
        description: 'The description of this JobPosting'
        type: string
        example: 'This is the best JobPosting ever'
        maxLength: 255
      title:
        description: 'The title of this Job Posting'
        type: string
        example: 'my JobPosting'
        maxLength: 255
      employmentType:
        description: 'The type of employment **full-time**, **part-time**, **temporary**, **seasonal**, **internship**'
        type: string
        example: full-time
      hiringOrganization:
        description: 'The organization that hires the person'
        type: string
        example: 'https://cc.zaakonline.nl/organizations/1'
        format: url
      jobStartDate:
        description: 'The start date of the contract'
        type: \DateTime
        example: 01-01-2020
      validThrough:
        description: 'The end date of the contract'
        type: \DateTime
        example: 01-01-2020
      standardHours:
        description: 'The standard amount of hours per week for this JobPosting'
        type: int
        example: '40'
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      employee:
        description: 'the employee this JobPosting relates to'
        type: \Employee
    required:
      - name
      - title
      - employmentType
      - standardHours
  JobPosting-write:
    properties:
      name:
        description: 'The name of this Job Posting'
        type: string
        example: 'my JobPosting'
        maxLength: 255
      description:
        description: 'The description of this JobPosting'
        type: string
        example: 'This is the best JobPosting ever'
        maxLength: 255
      title:
        description: 'The title of this Job Posting'
        type: string
        example: 'my JobPosting'
        maxLength: 255
      employmentType:
        description: 'The type of employment **full-time**, **part-time**, **temporary**, **seasonal**, **internship**'
        type: string
        example: full-time
      hiringOrganization:
        description: 'The organization that hires the person'
        type: string
        example: 'https://cc.zaakonline.nl/organizations/1'
        format: url
      jobStartDate:
        description: 'The start date of the contract'
        type: \DateTime
        example: 01-01-2020
      validThrough:
        description: 'The end date of the contract'
        type: \DateTime
        example: 01-01-2020
      standardHours:
        description: 'The standard amount of hours per week for this JobPosting'
        type: int
        example: '40'
      employee:
        description: 'the employee this JobPosting relates to'
        type: \Employee
    required:
      - name
      - title
      - employmentType
      - standardHours
  Skill-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'Name of the Skill'
        type: string
        example: 'Skill name'
        maxLength: 255
      description:
        description: 'Description of the skill'
        type: string
        example: 'description of the skill'
        maxLength: 2550
      level:
        description: 'Level of the skill **beginner**, **intermediate**, **advanced**'
        type: string
        example: advanced
        maxLength: 255
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      employee:
        description: 'The Employee to which this Goal belongs to'
        type: \Employee
    required:
      - name
      - description
      - level
  Skill-write:
    properties:
      name:
        description: 'Name of the Skill'
        type: string
        example: 'Skill name'
        maxLength: 255
      description:
        description: 'Description of the skill'
        type: string
        example: 'description of the skill'
        maxLength: 2550
      level:
        description: 'Level of the skill **beginner**, **intermediate**, **advanced**'
        type: string
        example: advanced
        maxLength: 255
      employee:
        description: 'The Employee to which this Goal belongs to'
        type: \Employee
    required:
      - name
      - description
      - level
tags:
  -
    name: Application
    description: |
      
      
      
  -
    name: AuditTrail
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: ChangeLog
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: Competence
    description: |
      
      
      
  -
    name: Employee
    description: |
      All properties that the entity Employee holds.
      
      
  -
    name: Goal
    description: |
      
      
      
  -
    name: Interest
    description: |
      
      
      
  -
    name: JobPosting
    description: |
      
      
      
  -
    name: Skill
    description: |
      
      
      
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the Skill resource'
      write: 'write right to the Skill resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the Skill resource'
      write: 'write right to the Skill resource'
host: irc.zaakonline.nl
servers:
  -
    name: conduction.nl
    url: mrc.dev.conduction.nl
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente "s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
